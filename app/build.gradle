plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-android-extensions'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.glori.pokemon"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation" : "$projectDir/schemas".toString()]
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding = true
    }

    lintOptions {
        abortOnError false
    }

    androidExtensions {
        experimental = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }

}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:${coreKtxVersion}"
    implementation "androidx.appcompat:appcompat:${appCompatVersion}"
    implementation "com.google.android.material:material:${materialVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${constrainLayoutVersion}"

    // Architecture Components
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleExtVersion"
    kapt "androidx.lifecycle:lifecycle-common-java8:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archLifecycleVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"

    // network
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"

    // moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    // glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.github.florent37:glidepalette:$glidePaletteVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    implementation 'com.caverock:androidsvg-aar:1.4'

    // dagger
    implementation "com.google.dagger:hilt-android:$daggerHiltCoreVersion"
    kapt "com.google.dagger:hilt-compiler:$daggerHiltCoreVersion"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$daggerHiltCoreVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$daggerHiltCoreVersion"
    implementation "androidx.hilt:hilt-common:$daggerHiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$daggerHiltVersion"
    kapt "androidx.hilt:hilt-compiler:$daggerHiltVersion"


    // loading animation
    implementation 'com.github.ybq:Android-SpinKit:1.4.0'


    //unit test
    testImplementation "junit:junit:${junitVersion}"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"

    //instrumented test
    androidTestImplementation "androidx.test.ext:junit:${androidJunitVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    debugImplementation "androidx.fragment:fragment-testing:$fragmentTestVersion"
    androidTestImplementation "androidx.test:core:$androidXTestCoreVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerMockitoVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
}